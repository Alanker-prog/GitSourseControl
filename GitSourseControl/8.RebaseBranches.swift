//
//  8.RebaseBranches.swift
//  GitSourseControl
//
//  Created by Алан Парастаев on 20.08.2025.
//

import SwiftUI
/*
 ✅ Rebase - это перебазирование(перенос) любой доп ветки вверх по тайм линии на вершину главной(main) ветки,тоесть это как слияние с основной веткой, только при слиянии веток камиты встраиваются в основную ветку(main) по временной таймлинии когда они были сделанны , а перебазирование встраивает камиты из доп ветки на верштну (main) ветки  игнорируя временную таймлинию(ПЕРЕБАЗИРОВАНИЕ НЕ ПРЕДВИГАЕТ ДОП ВЕТКИ НАВЕРХ, ОНО  ВСТРАИВАЕТ КОМИТЫ В ОСНОВНУЮ(main) ВЕТКУ ТАКЖЕ КАК И ПРИ СЛИЯНИИ, НО СРАЗУ НА ВЕРШИНУ (main) ВЕТКИ ИГНОРИРУЯ ТАЙМЛИНИЮ)
 
 ❌ Функция Rebase работает только в программе Kracken, Xcode не поддерживает эту функцию
 ❌ После Forse Push изминения не обратимы!!!
 ❌ Как сделать локальный Rebase в Kracken (НЕ ЖМЕМ Push И Forse Push) ,у нас ветки локально перебазировались в Kracken и в Xcode это отобразится, далее заходим в Xcode и прверяем что все работает и нет конфликтов файлов -> если все работает переходим обратно в Kracken и если ты точно уверен!!! можно запушить Rebase на Git и ветка перенсется уже окончательно и изминения будут необратимы (как откатить ветку обратно к исхдоному положению смотри ниже ⬇️)
 
 ❌ Конфликты при перебазировании -> к примеру ты хочешь пребазировать свой комит в (main) ветку с файлом HomeView , но в кто-то раньше добавил в (main) ветку такойже файл HomeView ,и получится что будет две версии HomeView в (main) ветки и случится конфликт такойже как и при слиянии веток! (РЕШАЕТСЯ КОНФЛИКТ ТАКЖЕ КАК И ПРИ СЛИЯНИИ,ЕСЛИ НЕ ПОМНИШЬ КАК СМОТРИ ДОКУ В УРОКЕ №7)
 
 ✅ Работает Rebase так -> открываем Kracken -> жмем правой кнопкой на значек (main) ветки -> жмем на Rebase "название доп ветки" ,после чего доп ветка преместится на вершину (main) ветки , но доп ветка все еще будет отображаться в ветвлении внизу (она будет в двух местах на вершине (main) ветки и там же где она была ранее),это потому что мы перебазировали ветку только локально. Для того что бы доп ветка исчезла внизу нужно нажать Push в Kracken и программа спросит уверены ли вы , ❌ После Forse Push изминения не обратимы❌ если уверен жми Forse Push и доп ветка исчезнит с низу(после она будет отображаться такойже доп веткой, но уже на вершине (main) ветки)
 ✅  Вернуть доп ветку обратно к исхоному полежению если изминения тебе не нравятся -> жмем внизу на иконку старой доп ветки(старая ветка не исчезает пока ты не запушил изминения на Git) -> жмем на Reset Local to Here после чего ветка вернется на свое первоночальное положения и исчезнут изминения в (main) ветки (тоесть все откатися к первоночальному виду)
 
 ✅ Rebase одного камита -> мы можем перебазировать на верх (main) ветки любой отдельный камит из любой доп ветки. Как это сделать -> жмем правой кнопкой на иконку (main) ветки -> жмем interactive Rebase "название доп ветки" и можем выбрать любой отдельный комит из ветки и удалить не нужные остальные каммиты -> далее выбираем нужный нам коммит и внизу справа в углу жмем Start Rebase и если уверен в изминениях запушиваешь их на Git
 */
struct RebaseBranches: View {
    var body: some View {
        Text(/*@START_MENU_TOKEN@*/"Hello, World!"/*@END_MENU_TOKEN@*/)
    }
}

#Preview {
    RebaseBranches()
}
