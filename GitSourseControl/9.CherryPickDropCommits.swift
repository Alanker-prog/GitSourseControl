//
//  9.CherryPickDropCommits.swift
//  GitSourseControl
//
//  Created by Алан Парастаев on 21.08.2025.
//

import SwiftUI
/*
 ✴️ CherryPick нужен для таких ситуаций -> Представь ситуацию вы с коллегой работаете в разных ветках и ты спрашиваешь его ты уже исправил эту ощибку и он отвечает да я ее исправил и она отмечена в одном из коммитов его ветки. И я хочу добавить это камит в свою текущею ветку так как он позаолить решить и мою проблему в коде (слияние и перебазирование не подходит в этом случае так как это изменит ветку нашего коллеги, а мы хотим просто скопировать один коммит нашего коллеги в свою ветку, тут и пригодится CherryPick!
 
 ✅ Копирование и отправка ссобщеня из коммита в Xcode -> жмем на нужную нам ветку -> находим нужный нам коммит и жмем на ннего правой кнопкой -> жмем Copy Commit Message(это скопирует текст этого комита и мы можем отправить его коллеге, но как быть если у тебя несколько коммитов с одинаковыми сообщениями(такое иногда бывает),тогда копируем Хеш-значение комимта ⬇️
 
 ✅ Как скопировать Хеш-значение коммита в Xcode -> жмем на нужную нам ветку -> находим нужный нам коммит и жмем на него правой кнопкой -> жмем Copy identifier и мы скопировали уникальный идентификатор этого коммита, котрый является его Хеш-значением -> Это Хеш-значение можно вставит в поиск Xcode или Kracken и найти нужный нам коммит
 
 ✅ Как применить CherryPick в Xcode -> жмем на ветку нашего коллеги или нужную нам ветку -> находим нужный нам коммит и жмем на него правой кнопкой -> жмем Cherry-Pick "хеш значение(цыфры)" -> подтверждаем действие Cherry-Pick -> И коммит коммит скопируется в нашу ветку(в ветку которой мы находились в это момент в Xcode, тоесть пред Cherry-Pick необходимо переключится в ту ветку куда мы хотим скопировать коммит).Этот коммит отображается терерь в двух ветках в твое ветке указанно что но скопирован из какой ветки он скопирован,таким образом контроль версий будет знать об этом и при слиянии веток не будет конфликта версий
 
 ❌ Удаление коммта!(работает только в Kracken) -> жмем правой кнопкой по ненужному коммиту -> жмем Drop commit -> подвеждаем Drop commit , но после этого коммт не исчезает так как мы удалили его локально -> для полного и безвазвратного удаления жмем Push в Kracken -> подвеждаем Force Push -> после этого препишится история коммитов на Git и эти коммит исчезнет безвозвратно!
 
 ❌ Редоктирование сообщения в каммите(работает только в Kracken, и лучше это не делать без особой нужды это не безопасно!) Как сделать -> жмем правой кнопкой по коммиту который хотим отредактировать -> Edit commit message -> затем справа в окошке для сообщения коммита изменяем сообщение и жмем Update Message -> после чего у нас будет две версии коммтов изминенная версия перенесется на верх по тайм линии, а для старого комита который внизу придется применить подвеждение Force Push после чего он исчезнет (НО ПРОБЛЕМА В ТОМ ЧТО СТАРЫЙ КОМИТ УДАЛЯЕТСЯ ИЗ ВЕТКИ , А ИЗМЕНЕНЫЙ КОММИТ ПЕРЕНСЕТСЯ НА САМЫЙ ВВСЕХ ПО ТАЙМ ЛИННИ КАК ПРИ ПЕРЕБАЗИРОВАНИИ А ЭТО НЕ ТО ЧЕГО МЫ ХОТЕЛИ , ВООБЩЕМ БЕЗ ОСОБОЙ НУЖДЫ НЕ ДЕЛАТЬ ЭТОГО!!!)
 */

struct CherryPickDropCommits: View {
    var body: some View {
        Text(/*@START_MENU_TOKEN@*/"Hello, World!"/*@END_MENU_TOKEN@*/)
    }
}

#Preview {
    CherryPickDropCommits()
}
