//
//  GitXcodeKrackenRuls.swift
//  GitSourseControl
//
//  Created by Алан Парастаев on 18.08.2025.
//

import SwiftUI
/*
 ✴️ Ветки
 ❌ Перед переходом на новую ветку комитим ВСЕ ИЗМИНЕНИЯ И ЗАПУШИВАЕМ ИХ на Git (в противном случае они сохраняться в тайник, а если закомитиш в новой ветке эти изминения попадут в обе ветки и будет конфликт версий‼️).Далее закрываем все View(окна) из ветки на котрой работали до прехода на новую ветуку. (РАЗДЕЛЯЕМ View ДЛЯ РАЗДНЫХ ВЕТОК)‼️
 ✅ Создать дополнительную ветку: Зажимаем правой кнопкой на main ветку -> New Branch from "main".. -> придумываем имя ветке(ИМЯ ВЕТКИ ДОЛЖНО ОТОБРАЖАТЬ НАД ЧЕМ ТЫ БУДЕШЬ РАБОТАТЬ В ЭТОЙ ВЕТКЕ). После создания новой ветки необходимо запушить ее удаленый репо. Переходим в новую ветку -> integrate -> Push... далее Xcode предложит создать новую ветку удаленно, выбираем -> (Create) -> и жмем Push
 ✅ Осторожно жать в Кракене на Stash может загрузить тебе старую версию кода, если ты забыл отправить новую версию кода на Git
 ✅ Origin это удаленый (repo)репозиторий, в нем отображаются ветки которые привязаны к удаленому репозиторию,если там не отображается какае-то ветка значит ты забыл отправить ее в удаленный репозиторий
 ✅ Переключение между ветками, жмем правой кнопкой -> Switch...
 ✅ Если писал код в дополнительной ветке и мне вдруг нужно преключиться в основную ветку, при преключении на основную ветку пявится окно предупреждение(оно говорит о том что я совершал изминения в доп ветки и спросит нужно ли их сохранить в тайнике!?) Stash Changes(изминения в тайник) далее пишем в окне коммит -> и жмем Stash and Switch. И мы прешли в основную ветку и после когда мы снова вернемся в дополнительную ветку у нас в папке тайнике(Stashed Changes) сохраненый код котрый мы не дописали ранне в этой ветке,он не сохранился в коде и нам нужно его извлечь, жмем правой кнопкой на него Apply Stashed Changes... -> и в всплывающем окне убераем галочку(мы не нужно сохраниять эти изминения) и жмем Apply Stash после чего это сохраненный код вернется View
 ✅ Если хотим объеденить ветки (допустим во второй ветке код готов и нам нужно обьеденить эту ветку с основной веткой). Переключаемся на основную ветку(main) и далее правой кнопкой мыши жмем на дополнительную ветку и нажимаем Merge " доп ветка " into "main" ,далее всплывет окно уверен ли я о слиянии веток если уверен жмем Merge. После этого обязательно необхадимо запушить изминения на Git так как мы соеденили наши ветки только локально и нужно отправить информацию про эти изминения у даленный репо, жмем integrate -> и жмем Push‼️
 ✅ После слияния можно удалить дополнительную ветку, жмем правой кнопкой мыши на доп ветку и жмем Delete.. и Delete, но в Kracken и Git она будет отображаться, что бы ее удалить заходит на Git -> преходим во вкладку Branches и жмем на корзину удаления у доп ветки. Что бы удалить из Kracken доп ветку наводимся на нее правый кнопкой -> Delite
 ✅ Если удалить дополнительные ветки (после слияния с основной) сначала удаляем из Krackenа, они будут отображаться в Xcode, что бы они пропали их Xcode нужно перевойти в него
 
 ✴️ Kracken:
 ✅ Push в Кракене тоже самое что Push в Xcode отправляет изминения в удаленный репозиторий
 */

struct GitXcodeKrackenRuls: View {
    var body: some View {
        Text(/*@START_MENU_TOKEN@*/"Hello, World!"/*@END_MENU_TOKEN@*/)
    }
}

#Preview {
    GitXcodeKrackenRuls()
 }
